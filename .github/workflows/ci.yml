
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  release:
    types: [published]

name: CI

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    env:
      RUST_TEST_THREADS: "1"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo doc
        env:
          RUSTDOCFLAGS: "-Dwarnings"
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps

  leaks:
    name: Memory leaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: "-Z sanitizer=leak"
        with:
          command: build
          args: --target x86_64-unknown-linux-gnu --tests

      - name: Run tests with leak sanitizer
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: "-Z sanitizer=leak"
          RUST_TEST_THREADS: "1"
        with:
          command: test
          args: --target x86_64-unknown-linux-gnu

  release:
    name: Publish version
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: [build, test, lints, docs, leaks]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Query crate version
        run: export CRATE_VERSION = $(cargo metadata --format-version=1 --no-deps | python -c "import sys,json; print('v' + json.load(sys.stdin)['packages'][0]['version'])")

      - name: Query release tag version
        run: export RELEASE_TAG_VERSION = ${{ github.event.release.name }}

      - name: Check matching versions
        run: echo "$CRATE_VERSION == $RELEASE_TAG_VERSION"

      - name: Publish with cargo
        run: echo "DUMMY. TODO Implement"
